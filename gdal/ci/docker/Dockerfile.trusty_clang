FROM ubuntu:trusty

WORKDIR /tmp
# things to make this image look like Travis' build environment
RUN DEBIAN_FRONTEND=noninteractive apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qy build-essential ccache rsync curl python3 software-properties-common wget unzip openjdk-7-jdk python-dev python3-dev ant sqlite \
    && add-apt-repository -y ppa:openjdk-r/ppa \
    && apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qy openjdk-8-jdk

# This is basically the trusty_clang/pre_install.sh
RUN add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable \
    && DEBIAN_FRONTEND=noninteractive apt-get update -q \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qy --allow-unauthenticated ccache python-numpy libpng12-dev libjpeg-dev libgif-dev liblzma-dev libgeos-dev libcurl4-gnutls-dev libproj-dev libxml2-dev libexpat-dev libxerces-c-dev libnetcdf-dev netcdf-bin libpoppler-dev libspatialite-dev gpsbabel swig libhdf4-alt-dev libhdf5-serial-dev libpodofo-dev poppler-utils libfreexl-dev unixodbc-dev libwebp-dev  libepsilon-dev  liblcms2-2 libpcre3-dev mercurial cmake libcrypto++-dev \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qy python-lxml \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qy python-pip \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qy libqhull-dev \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qy libogdi3.2-dev \
    && pip install pyflakes \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qy doxygen texlive-latex-base
RUN wget -nv http://s3.amazonaws.com/etc-data.koordinates.com/gdal-travisci/FileGDB_API_1_2-64.tar.gz \
    && wget -nv http://s3.amazonaws.com/etc-data.koordinates.com/gdal-travisci/MrSID_DSDK-8.5.0.3422-linux.x86-64.gcc44.tar.gz \
    && wget -nv http://s3.amazonaws.com/etc-data.koordinates.com/gdal-travisci/install-libecwj2-ubuntu12.04-64bit.tar.gz \
    && wget -nv http://s3.amazonaws.com/etc-data.koordinates.com/gdal-travisci/install-libkml-r864-64bit.tar.gz \
    && wget -nv https://github.com/uclouvain/openjpeg/releases/download/v2.3.0/openjpeg-v2.3.0-linux-x86_64.tar.gz \
    && tar xzf MrSID_DSDK-8.5.0.3422-linux.x86-64.gcc44.tar.gz \
    && cp -r MrSID_DSDK-8.5.0.3422-linux.x86-64.gcc44/Raster_DSDK/include/* /usr/local/include \
    && cp -r MrSID_DSDK-8.5.0.3422-linux.x86-64.gcc44/Raster_DSDK/lib/* /usr/local/lib \
    && cp -r MrSID_DSDK-8.5.0.3422-linux.x86-64.gcc44/Lidar_DSDK/include/* /usr/local/include \
    && cp -r MrSID_DSDK-8.5.0.3422-linux.x86-64.gcc44/Lidar_DSDK/lib/* /usr/local/lib \
    && tar xzf FileGDB_API_1_2-64.tar.gz \
    && cp -r FileGDB_API/include/* /usr/local/include \
    && cp -r FileGDB_API/lib/* /usr/local/lib \
    && tar xzf install-libecwj2-ubuntu12.04-64bit.tar.gz \
    && cp -r install-libecwj2/include/* /usr/local/include \
    && cp -r install-libecwj2/lib/* /usr/local/lib \
    && tar xzf install-libkml-r864-64bit.tar.gz \
    && cp -r install-libkml/include/* /usr/local/include \
    && cp -r install-libkml/lib/* /usr/local/lib \
    && tar xzf openjpeg-v2.3.0-linux-x86_64.tar.gz \
    && cp -r openjpeg-v2.3.0-linux-x86_64/include/* /usr/local/include \
    && cp -r openjpeg-v2.3.0-linux-x86_64/lib/* /usr/local/lib
RUN wget -nv https://bitbucket.org/chchrsc/kealib/get/c6d36f3db5e4.zip \
    && unzip -q c6d36f3db5e4.zip \
    && cd chchrsc-kealib-c6d36f3db5e4/trunk \
    && cmake . -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DHDF5_INCLUDE_DIR=/usr/include -DHDF5_LIB_PATH=/usr/lib -DLIBKEA_WITH_GDAL=OFF \
    && make -j \
    && make install
RUN wget -nv https://github.com/facebook/zstd/archive/v1.3.3.tar.gz \
    && tar xzf v1.3.3.tar.gz \
    && cd zstd-1.3.3/lib \
    && make -j PREFIX=/usr ZSTD_LEGACY_SUPPORT=0 CFLAGS=-O1 \
    && make install PREFIX=/usr ZSTD_LEGACY_SUPPORT=0 CFLAGS=-O1

# Clang 3.5
RUN wget -nv http://releases.llvm.org/3.5.0/clang+llvm-3.5.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz \
    && tar xJf clang+llvm-3.5.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz --strip-components=1 -C /usr/local \
    && rm clang+llvm-3.5.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz

RUN ldconfig

ENV CCACHE_DIR=/ccache
WORKDIR /src

COPY ci*.sh /
ENTRYPOINT ["/ci-base.sh"]
